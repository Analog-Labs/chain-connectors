name: test

on:
  push:
    branches:
    - master
    - staging
    - release-v*
  pull_request:

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Install dprint
      run: cargo install --locked dprint

    - name: Dprint check
      run: dprint check

    - name: Install nightly toolchain
      run: rustup toolchain install nightly

    - name: cargo fmt
      run: cargo +nightly fmt --all -- --check

    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      env:
        SHELLCHECK_OPTS: --enable=all --shell=bash
      with:
        severity: style
        scandir: './scripts'

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: cargo-deny check
        uses: EmbarkStudios/cargo-deny-action@v1

  # Test each client individually, once testing the whole workspace can hide some compilation errors
  # ex: testing using --workspace enable the same feature flags for all crates
  test-client:
    needs: [rustfmt]
    strategy:
      matrix:
        crate: [rosetta-server-astar, rosetta-server-bitcoin, rosetta-server-ethereum, rosetta-server-polkadot, rosetta-client]
    name: ${{ matrix.crate }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - run: sudo add-apt-repository ppa:ethereum/ethereum
    - run: sudo apt-get update -y
    - name: Install deps
      run: sudo apt-get install -y musl-dev musl-tools solc

    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.74.1
        components: clippy
        target: x86_64-unknown-linux-musl
        override: true
    
    - name: cargo clippy (${{ matrix.crate }})
      run: |
        cargo clippy --locked -p ${{ matrix.crate }} --examples --tests -- \
          -Dwarnings \
          -Dclippy::unwrap_used \
          -Dclippy::expect_used \
          -Dclippy::nursery \
          -Dclippy::pedantic \
          -Aclippy::module_name_repetitions
  
    - name: Cleanup Docker
      run: ./scripts/reset_docker.sh

    - name: Pull nodes
      run: ./scripts/pull_nodes.sh

    - name: test (${{ matrix.crate }})
      run: cargo test --locked -p ${{ matrix.crate }}
  
  # Test all crates, excluding the clients
  test:
    needs: [rustfmt]
    runs-on: ubuntu-latest
    name: cargo test --workspace --all-features
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - run: sudo add-apt-repository ppa:ethereum/ethereum
    - run: sudo apt-get update -y
    - name: Install deps
      run: sudo apt-get install -y musl-dev musl-tools solc

    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.74.1
        components: clippy
        target: x86_64-unknown-linux-musl
        override: true
    
    - name: Checkout code
      run: git clone -b release --recurse-submodules https://github.com/ManojJiSharma/nitro-testnode.git

    - name: Run the arbitrum nitro-testnode
      run: |
        cd nitro-testnode
        ./test-node.bash --detach

    - name: clippy
      run: |
        cargo clippy --locked --workspace --examples --tests --all-features \
          --exclude rosetta-server-astar \
          --exclude rosetta-server-bitcoin \
          --exclude rosetta-server-ethereum \
          --exclude rosetta-server-polkadot \
          --exclude rosetta-client \
          -- \
          -Dwarnings \
          -Dclippy::unwrap_used \
          -Dclippy::expect_used \
          -Dclippy::nursery \
          -Dclippy::pedantic \
          -Aclippy::module_name_repetitions

    - name: Pull nodes
      run: ./scripts/pull_nodes.sh

    - name: cargo test
      run: |
        cargo test --locked --workspace --all-features \
          --exclude rosetta-server-astar \
          --exclude rosetta-server-bitcoin \
          --exclude rosetta-server-ethereum \
          --exclude rosetta-server-polkadot \
          --exclude rosetta-client

    - name: Cleanup Docker
      run: ./scripts/reset_docker.sh